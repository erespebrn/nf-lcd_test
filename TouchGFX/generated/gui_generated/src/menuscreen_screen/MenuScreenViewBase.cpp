/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/menuscreen_screen/MenuScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

MenuScreenViewBase::MenuScreenViewBase() :
    flexButtonCallback(this, &MenuScreenViewBase::flexButtonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box.setPosition(0, 0, 480, 272);
    box.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(box);

    line1.setPosition(0, 29, 480, 50);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(93, 245, 76));
    line1.setPainter(line1Painter);
    line1.setStart(10, 5);
    line1.setEnd(470, 5);
    line1.setLineWidth(1);
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line1);

    textArea1.setXY(12, 9);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(90, 189, 77));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OD6K));
    add(textArea1);

    robotButtonSmall.setBoxWithBorderPosition(0, 0, 328, 100);
    robotButtonSmall.setBorderSize(0);
    robotButtonSmall.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(67, 107, 72), touchgfx::Color::getColorFromRGB(9, 176, 14), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    robotButtonSmall.setIconBitmaps(Bitmap(BITMAP_ROBOTIC_ARM_ID), Bitmap(BITMAP_ROBOTIC_ARM_ID));
    robotButtonSmall.setIconXY(150, 20);
    robotButtonSmall.setText(TypedText(T___SINGLEUSE_NS0Z));
    robotButtonSmall.setTextPosition(0, 60, 328, 100);
    robotButtonSmall.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(250, 250, 250));
    robotButtonSmall.setAlpha(176);
    robotButtonSmall.setAction(flexButtonCallback);
    robotButtonSmall.setPosition(20, 50, 328, 100);
    add(robotButtonSmall);

    instrButton.setBoxWithBorderPosition(0, 0, 328, 100);
    instrButton.setBorderSize(0);
    instrButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(67, 107, 72), touchgfx::Color::getColorFromRGB(9, 176, 14), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    instrButton.setIconBitmaps(Bitmap(BITMAP_INSTRUMENT_30X30_ID), Bitmap(BITMAP_INSTRUMENT_30X30_ID));
    instrButton.setIconXY(150, 20);
    instrButton.setText(TypedText(T___SINGLEUSE_XGWC));
    instrButton.setTextPosition(0, 60, 328, 100);
    instrButton.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(250, 250, 250));
    instrButton.setAlpha(176);
    instrButton.setAction(flexButtonCallback);
    instrButton.setPosition(20, 163, 328, 100);
    add(instrButton);

    statusButton.setBoxWithBorderPosition(0, 0, 100, 213);
    statusButton.setBorderSize(0);
    statusButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(67, 107, 72), touchgfx::Color::getColorFromRGB(9, 176, 14), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    statusButton.setIconBitmaps(Bitmap(BITMAP_STATUS_ID), Bitmap(BITMAP_STATUS_ID));
    statusButton.setIconXY(35, 80);
    statusButton.setText(TypedText(T___SINGLEUSE_PVA0));
    statusButton.setTextPosition(0, 120, 100, 213);
    statusButton.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255));
    statusButton.setAlpha(176);
    statusButton.setAction(flexButtonCallback);
    statusButton.setPosition(359, 50, 100, 213);
    add(statusButton);
}

MenuScreenViewBase::~MenuScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void MenuScreenViewBase::setupScreen()
{

}

void MenuScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &robotButtonSmall)
    {
        //gotoRobotScreen
        //When robotButtonSmall clicked change screen to RobotScreen
        //Go to RobotScreen with screen transition towards West
        application().gotoRobotScreenScreenWipeTransitionWest();
    }
    if (&src == &instrButton)
    {
        //gotoInstrScreen
        //When instrButton clicked change screen to InstrScreen
        //Go to InstrScreen with screen transition towards West
        application().gotoInstrScreenScreenWipeTransitionWest();
    }
    if (&src == &statusButton)
    {
        //gotoStatusScreen
        //When statusButton clicked change screen to InstrScreen
        //Go to InstrScreen with screen transition towards West
        application().gotoInstrScreenScreenWipeTransitionWest();
    }
}
